"use strict";
// Copyright (c) 2017, Shellyl_N and Authors
// license: ISC
// https://github.com/shellyln
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bitmap = void 0;
const BitStream_1 = require("../io/BitStream");
class Bitmap {
    constructor(width, height, src) {
        this.w = width;
        this.h = height;
        this.widthAligned = Math.ceil(width / 8) * 8;
        this.buf = new BitStream_1.BitStreamWriter(this.widthAligned * height, src);
        this.buf.seek(0, BitStream_1.StreamSeekOrigin.End);
    }
    get width() {
        return this.w;
    }
    get height() {
        return this.h;
    }
    toBytes() {
        return this.buf.toBytes();
    }
    set(x, y, v) {
        this.buf.setBit(y * this.widthAligned + x, v);
    }
    get(x, y) {
        return this.buf.getBit(y * this.widthAligned + x);
    }
    clear(x, y, width, height) {
        x = Math.max(0, x);
        y = Math.max(0, y);
        width = Math.max(0, Math.min(width, Math.max(0, this.w - x)));
        height = Math.max(0, Math.min(height, Math.max(0, this.h - y)));
        for (let j = 0; j < height; j++) {
            const offset = (y + j) * this.widthAligned + x;
            for (let i = 0; i < width; i++) {
                this.buf.setBit(offset + i, 0);
            }
        }
        return this;
    }
    fill(x, y, width, height, v) {
        x = Math.max(0, x);
        y = Math.max(0, y);
        width = Math.max(0, Math.min(width, Math.max(0, this.w - x)));
        height = Math.max(0, Math.min(height, Math.max(0, this.h - y)));
        for (let j = 0; j < height; j++) {
            const offset = (y + j) * this.widthAligned + x;
            for (let i = 0; i < width; i++) {
                this.buf.setBit(offset + i, v);
            }
        }
        return this;
    }
    clearAll() {
        const length = this.buf.byteLength;
        for (let i = 0; i < length; i++) {
            this.buf.setByte(i, 0);
        }
        return this;
    }
}
exports.Bitmap = Bitmap;
//# sourceMappingURL=Bitmap.js.map